----QUIT----2022-04-12T16:10:26.871494+02:00 Pharo10-SNAPSHOT-64bit-570d7ba.image priorSource: 0!----QUIT----2022-04-12T16:10:55.54009+02:00 Pharo10-SNAPSHOT-64bit-570d7ba.image priorSource: 0!----QUIT----2022-04-20T07:13:55.784-03:00 Pharo 10.0 - 64bit (stable).image priorSource: 99!Object subclass: #Figura	instanceVariableNames: '' 	classVariableNames: ''	poolDictionaries: ''	package: 'ejercicioFigura'!Figura subclass: #Triangulo	instanceVariableNames: 'lado1 lado2 lado3' 	classVariableNames: ''	package: 'ejercicioFigura'!!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 11:35'!lado1 	^lado1.! !!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 11:35'!lado2 	^lado2.! !!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 11:35'!lado3	^lado3.! !!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 11:36'!lado1: unLado	lado1 := unLado.	"Asignacion"! !!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 11:37'!lado2: unLado	lado2 := unLado.	"Asignacion"! !!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 11:37'!lado3: unLado	lado3 := unLado.	"Asignacion"! !!Figura methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/21/2022 11:46'!area! !!Figura methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/21/2022 11:46'!perimetro! !!Figura methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/21/2022 11:49' prior: 33555789!perimetro	self subclassResponsibility "solo dice para decir que figura no lo utiliza, pero si su sublclases"! !!Figura methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/21/2022 11:50' prior: 33555707!area	self subclassResponsibility.! !Figura subclass: #Circulo	instanceVariableNames: 'radio' 	classVariableNames: ''	package: 'ejercicioFigura'!!Circulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 11:56'!radio ^radio.! !!Circulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 11:58'!radio: unRadio 	"Establece el radio de un circulo"	radio := unRadio.! !!Circulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 12:05'!area	"METODO HEREDADO, metodo que redifnie el area de un figura para que calcule la de un circulo"	|calculo|	calculo  := Float pi * (self radio raisedTo:2). "radio es un mensaje, al hacer self radio, estoy llamando a mi mismo radio"	^calculo ! !!Circulo methodsFor: 'redifincionCalculoMetodosHeredados' stamp: 'EmilioGalimberti 4/21/2022 12:06' prior: 33556557!area	"METODO HEREDADO, metodo que redifnie el area de un figura para que calcule la de un circulo"	|calculo|	calculo  := Float pi * (self radio raisedTo:2). "radio es un mensaje, al hacer self radio, estoy llamando a mi mismo radio"	^calculo ! !!Circulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 12:07' prior: 33556319!radio "indica el radio de un ciruclo" ^radio.! !Circulo removeSelector: #area!!Circulo methodsFor: 'metodosHeredados' stamp: 'EmilioGalimberti 4/21/2022 12:07'!area	"METODO HEREDADO, metodo que redifnie el area de un figura para que calcule la de un circulo"	|calculo|	calculo  := Float pi * (self radio raisedTo:2). "radio es un mensaje, al hacer self radio, estoy llamando a mi mismo radio"	^calculo ! !!Circulo methodsFor: 'metodosHeredados' stamp: 'EmilioGalimberti 4/21/2022 12:09'!perimetro 	"redifine el perimetro de un circulo, en este caso la longitudo de la circuferencia"	|perimetro|	perimetro = 2 * Float pi *radio.	^perimetro.! !Circulo removeSelector: #perimetro!!Circulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/21/2022 12:12'!perimetro 	"redifine el perimetro de un circulo, en este caso la longitudo de la circuferencia"	|perimetro|	perimetro = 2 * Float pi *radio.	^perimetro.! !!Circulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/21/2022 12:14' prior: 33558034!perimetro 	"redifine el perimetro de un circulo, en este caso la longitudo de la circuferencia"	|perimetro|	perimetro := 2 * Float pi *  radio. 	^perimetro.! !!Circulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/21/2022 12:15' prior: 33558285!perimetro 	"METODO HERDADO"	"redifine el perimetro de un circulo, en este caso la longitudo de la circuferencia"	|perimetro|	perimetro := 2 * Float pi *  radio. 	^perimetro.! !!Triangulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/21/2022 12:16'!perimetro 	"redifine el perimetro de un circulo, en este caso la longitudo de la circuferencia"	|perimetro|"	perimetro := " 	^perimetro.! !!Triangulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/21/2022 12:16'!area	"METODO HEREDADO, metodo que redifnie el area de un figura para que calcule la de un circulo"	|calculo|	"calculo  := Float pi * (self radio raisedTo:2). radio es un mensaje, al hacer self radio, estoy llamando a mi mismo radio"	^calculo.! !!Triangulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/21/2022 12:32' prior: 33559020!area	"METODO HEREDADO, metodo que redifnie el area de un figura para que calcule la de un circulo"	|calculo|	calculo  := 0.25 * ((self lado1 + self lado2 - self lado3) * (self lado1 - self lado2 + self lado3) * ( (self lado1) negated  + self lado2 + self lado3) *(self lado1 + self lado2 + self lado3) sqrt). "radio es un mensaje, al hacer self radio, estoy llamando a mi mismo radio"	^calculo.	! !!Triangulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/21/2022 12:54' prior: 33558799!perimetro 	"redifine el perimetro de un circulo, en este caso la longitudo de la circuferencia"	|perimetro|	perimetro := lado1 + lado2 +lado3.  	^perimetro.! !Figura subclass: #Rectangulo	instanceVariableNames: 'ladoMenor ladoMayor'	classVariableNames: ''	package: 'ejercicioFigura'!!Rectangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 12:56'!ladoMenor ^ladoMenor.! !!Rectangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 12:57'!ladoMenor: unLado ladoMenor := unLado . ! !!Rectangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 12:57'!ladoMayor: unLado ladoMayor := unLado .! !!Rectangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 12:58'!ladoMayor ^ladoMayor.! !!Rectangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 13:00'!tipoRectangulo	"determina si es un cuadrado o no"	(ladoMayor = ladoMenor )		ifTrue: [ ^'El rectangulo es un CUADRADO' ]		ifFalse: [ ^'El rectango es un..' ].! !Object subclass: #Grafico	instanceVariableNames: 'figura' 	classVariableNames: ''	package: 'ejercicioFigura'!Object subclass: #Grafico	instanceVariableNames: 'figuras'	classVariableNames: ''	package: 'ejercicioFigura'!!Grafico methodsFor: 'initialize' stamp: 'EmilioGalimberti 4/21/2022 13:11'!initialize 	"inicializa la instancia de Grafico da valores por defecto a los atributos"	figuras := OrderedCollection.	! !!Grafico methodsFor: 'control' stamp: 'EmilioGalimberti 4/21/2022 13:19'!addFigura: unaFigura	"Asigna una figura a la coleccion de figiuras"	(unaFigura isKindOf: Figura )		ifTrue: [ figuras add: unaFigura ]. "entiende el add, por que es una coleccion,"	"lo malo de esto es que no hay verificacion"! !!Grafico methodsFor: 'control' stamp: 'EmilioGalimberti 4/21/2022 13:20' prior: 33561344!addFigura: unaFigura	"Asigna una figura a la coleccion de figiuras"	(unaFigura isKindOf: Figura )	"no darle bola a este rror"		ifTrue: [ figuras add: unaFigura ]. "entiende el add, por que es una coleccion,"	"lo malo de esto es que no hay verificacion"! !!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 13:20' prior: 33555336!lado1: unLado	lado1 := unLado.	"Asignacion/modificaicon"! !!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 13:20' prior: 33555055!lado1 	^lado1.	"ACCESO"		! !----SNAPSHOT----2022-04-21T13:37:32.641-03:00 Pharo 10.0 - 64bit (stable).image priorSource: 197!----QUIT----2022-04-21T13:40:02.681-03:00 Pharo 10.0 - 64bit (stable).image priorSource: 7770!----SNAPSHOT----2022-04-22T15:49:59.062-03:00 Pharo 10.0 - 64bit (stable).image priorSource: 7869!!Rectangulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 16:38' prior: 33560675!tipoRectangulo	"determina si es un cuadrado o no"	(ladoMayor = ladoMenor )		ifTrue: [ ^'El rectangulo es un CUADRADO' ]		ifFalse: [ ^'El rectango es un..' ].! !!Rectangulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 16:40' prior: 33562592!tipoRectangulo	"determina si es un cuadrado o no"	(ladoMayor = ladoMenor )		ifTrue: [ ^'El rectangulo es un CUADRADO' ]		ifFalse: [ ^'El rectangulo tiene lados diferentes' ].	^'Rectangulo'! !!Rectangulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 16:41'!area	^ladoMenor * ladoMayor ! !!Rectangulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 16:43'!perimetro	|calculo|	calculo := 2 * ladoMenor + 2 * ladoMayor .	^calculo .! !!Rectangulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 16:43' prior: 33563237!perimetro	|calculo|	calculo := (2 * ladoMenor) + (2 * ladoMayor) .	^calculo .! !Figura subclass: #Triangulo	instanceVariableNames: 'base catetoA catetoB'	classVariableNames: ''	package: 'ejercicioFigura'!!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/22/2022 17:04' prior: 33562170!lado1 	^base.	"ACCESO"		! !!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/22/2022 17:04'!base 	^base.	"ACCESO"		! !Triangulo removeSelector: #lado1!!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/22/2022 17:05'!base: unLado	base := unLado.	"Asignacion/modificaicon"! !Triangulo removeSelector: #lado1:!!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/22/2022 17:06'!catetoA 	^catetoA .! !Triangulo removeSelector: #lado2!!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/22/2022 17:06'!catetoA: unLado	catetoA  := unLado.	"Asignacion"! !Triangulo removeSelector: #lado2:!!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/22/2022 17:06'!catetoB	^catetoB.! !Triangulo removeSelector: #lado3!!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/22/2022 17:07'!catetoB: unLado	catetoB := unLado.	"Asignacion"! !Triangulo removeSelector: #lado3:!!Triangulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 17:08' prior: 33559860!perimetro 	"redifine el perimetro de un circulo, en este caso la longitudo de la circuferencia"	^base + catetoA + catetoB ! !!Triangulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 17:10' prior: 33559363!area	"METODO HEREDADO, metodo que redifnie el area de un figura para que calcule la de un circulo"	|t calculo|	t  := (catetoA + catetoB - base) * (catetoA - catetoB + base) * (catetoA  negated + catetoB + base ) * (catetoA + catetoB + base). "radio es un mensaje, al hacer self radio, estoy llamando a mi mismo radio"	calculo := 0.25 *(t sqrt).	^calculo.	! !!Triangulo methodsFor: 'as yet unclassified' stamp: 'EmilioGalimberti 4/22/2022 17:14'!tipoTriangulo"Determina si un triangulo es equilatero, iscoceles, o escaleno"	(base = catetoA and: base =catetoB)		ifTrue: [ ^'Triangulo Equilatero' ]		ifFalse: [ ^'Triangulo Isoceles'].		! !!Grafico methodsFor: 'initialize' stamp: 'EmilioGalimberti 4/22/2022 17:17' prior: 33561145!initialize 	"inicializa la instancia de Grafico da valores por defecto a los atributos"	figuras := OrderedCollection new.	! !!Grafico methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/22/2022 17:18'!figuras"Retorna los alumnos del curso"	^figuras.! !!Grafico methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/22/2022 17:20'!figuras: unasFiguras"Asigna unas figuras al grafico (clase grafico para la coleccion)"	figuras := unasFiguras.! !!Grafico methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/22/2022 17:20' prior: 33566040!figuras: unasFiguras"Asigna unas figuras al grafico"	figuras := unasFiguras.! !Grafico removeSelector: #addFigura:!!Grafico methodsFor: 'control' stamp: 'EmilioGalimberti 4/22/2022 17:22'!addFigura: unaFigura"Asigna unaFigura a la coleccion de figuras"	figuras add: unaFigura.! !!Grafico methodsFor: 'control' stamp: 'EmilioGalimberti 4/22/2022 17:27'!promedio"retorna el promedio de las superficies de las Figuras"	|prom ac|	ac:=0.	figuras do: "for"[ :unaFigura | ac:= ac + unaFigura area].	(figuras size ~= 0)		ifTrue: [ prom := ((ac asFloat) /figuras size) asFloat ]		ifFalse: [ prom:= 0 ].	^prom.! !!Grafico methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 17:28' prior: 33566607!promedio"retorna el promedio de las superficies de las Figuras"	|prom ac|	ac:=0.	figuras do: "for"[ :unaFigura | ac:= ac + unaFigura area].	(figuras size ~= 0)		ifTrue: [ prom := ((ac asFloat) /figuras size) asFloat ]		ifFalse: [ prom:= 0 ].	^prom.! !!Grafico methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 17:29' prior: 33566958!promedio	"retorna el promedio de las superficies de las Figuras"	| prom ac |	ac := 0.	figuras do: [ :unaFigura | "for" ac := ac + unaFigura area ].	prom := figuras size ~= 0		        ifTrue: [ (ac asFloat / figuras size) asFloat ]		        ifFalse: [ 0 ].	^ prom! !!Grafico methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 17:29' prior: 33567309!promedio	"retorna el promedio de las superficies de las Figuras"	| prom ac |	ac := 0.	figuras do: [ :unaFigura | "for" ac := ac + unaFigura area ].	prom := figuras size ~= 0		        ifTrue: [ (ac asFloat / figuras size) asFloat ]		        ifFalse: [ 0 ].	^ prom! !!Grafico methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 17:29' prior: 33567676!promedio	"retorna el promedio de las superficies de las Figuras"	| prom ac |	ac := 0.	figuras do: [ :unaFigura | "for" ac := ac + unaFigura area ].	prom := figuras size ~= 0		        ifTrue: [ (ac asFloat / figuras size) asFloat ]		        ifFalse: [ 0 ].	^ prom! !!Grafico methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 17:54'!mayorSuperficie"Retorna la superficie de la figura mas grande"	|may|	may := 0	figuras do: [ :unaFigura | (unaFigura area > may) 		ifTrue: [ may := unaFigura area ] ].	^may		! !!Grafico methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 18:00'!cantAreaPerimetro"Retorna la cantidad de las figuras con area mas grande que su perimetro"	|ar per cont|	cont := 0	figuras do: [ :unaFigura | ar:= unaFigura area. per:=unaFigura perimetro].	(ar > per) 		ifTrue: [ cont:= cont+1 ].	^cont.			! !!Grafico methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 18:02'!generarMayorPerimtero: perimetro"genera una nueva coleccion con los elemento mayores a un perimetro dado"	|gen|	gen := OrderedCollection new.	figuras do: [ :unaFigura | (unaFigura perimetro > perimetro ) ifTrue: [ gen add: unaFigura  ] ].	^gen .		! !!Grafico methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 18:03' prior: 33568980!generarMayorPerimtero: perimetro"genera una nueva coleccion con los elemento mayores a un perimetro dado"	|gen|	gen := OrderedCollection new.	figuras do: [ :unaFigura | 		(unaFigura perimetro > perimetro ) 		ifTrue: [ gen add: unaFigura  ] 		].	^gen .		! !----SNAPSHOT----2022-04-22T20:04:18.935-03:00 Pharo 10.0 - 64bit (stable).image priorSource: 7965!----SNAPSHOT----2022-04-22T20:37:31.238-03:00 Pharo 10.0 - 64bit (stable).image priorSource: 15159!----QUIT----2022-04-22T20:37:34.606-03:00 Pharo 10.0 - 64bit (stable).image priorSource: 15259!Object subclass: #Camion	instanceVariableNames: 'contenido' 	classVariableNames: ''	package: 'repasoParcial1'!Smalltalk globals removeClassNamed: #AnObsoleteCamion!Object subclass: #Carga	instanceVariableNames: 'contenido' 	classVariableNames: ''	package: 'repasoParcial1'!Object subclass: #Camion	instanceVariableNames: 'patente estado cargaMaxima cargas'	classVariableNames: ''	package: 'repasoParcial1'!Carga subclass: #Bidon	instanceVariableNames: 'capacidad densidad'	classVariableNames: ''	package: 'repasoParcial1'!Carga subclass: #Caja	instanceVariableNames: 'peso'	classVariableNames: ''	package: 'repasoParcial1'!Carga subclass: #Packing	instanceVariableNames: 'pesoPorCaja cantidad pesoEstructura'	classVariableNames: ''	package: 'repasoParcial1'!!Bidon methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 09:17'!capaidad	^capacidad.! !!Bidon methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 09:18'!capaidad: anObject	capacidad := anObject.! !!Bidon methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 09:18'!densidad	^densidad.! !!Bidon methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 09:18'!densidad: anObject	densidad := anObject.! !!Bidon methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 09:22'!initialize 	|peso|	super initialize.	capacidad := 0.	densidad := 0.	peso := (capacidad * densidad ).	^peso.	 ! !!Bidon methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 09:26' prior: 33571185!initialize 	super initialize.	capacidad := 0.	densidad := 0.	 ! !!Bidon methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 09:27'!peso	^(capacidad * densidad).! !!Bidon methodsFor: 'as yet unclassified' stamp: 'EmilioGalimberti 4/28/2022 09:29'!asString 	|cad|	cad :=super asString, 'Bidon con capacidad: ', capacidad asString,'y densidad:', densidad asString,'-'.	^cad.! !!Caja methodsFor: 'as yet unclassified' stamp: 'EmilioGalimberti 4/28/2022 09:30'!peso	^peso.	! !!Caja methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 09:30'!peso: anObject	peso := anObject! !!Caja methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 09:31'!initialize 	super initialize.	peso := 0.! !!Caja methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 09:32'!asString 	|cad|	cad := super asString, 'Peso de la caja: ',peso asString,'-'.	^cad.! !!Packing methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 09:37'!pesoEstructura: anObject	pesoEstructura := anObject.! !!Packing methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 09:37'!pesoEstructura	^pesoEstructura ! !!Packing methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 09:38'!cantidad: anObject	cantidad := anObject.! !!Packing methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 09:38'!cantidad	^cantidad.! !!Packing methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 09:38'!pesoPorCaja	^pesoPorCaja! !!Packing methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 09:39'!pesoPorCaja: anObject	pesoPorCaja := anObject ! !!Packing methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 09:40'!initialize 	super initialize.	pesoPorCaja := 0.	pesoEstructura := 0.	cantidad := 0.! !!Packing methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 09:41'!peso 	|res|	res :=(pesoPorCaja * cantidad) + pesoEstructura.	^res.! !!Packing methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 09:43'!asString 	|cad|	cad := super asString, 'packing con peso por caja: ', pesoPorCaja asString, ', cantidad: ', cantidad asString, ', Peso de la estructura: ', pesoEstructura asString, '-'.	^cad.! !!Carga methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 11:01'!initialize  self subclassResponsibility ! !!Carga methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 11:02'!asString 	self subclassResponsibility ! !!Carga methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 11:03'!peso	self subclassResponsibility ! !!Packing methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 11:03' prior: 33572908!pesoPorCaja: anObject	pesoPorCaja := anObject! !!Carga methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 11:14'!contenido	^ contenido! !!Carga methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 11:14'!contenido: anObject	contenido := anObject! !!Carga methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 11:17' prior: 33573829!peso	"permito calcular el peso de una carga"	self subclassResponsibility ! !!Figura methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/28/2022 11:19' prior: 33555892!perimetro	^self subclassResponsibility "solo dice para decir que figura no lo utiliza, pero si su sublclases"! !!Carga methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 11:20' prior: 33574316!peso	"permito calcular el peso de una carga"	^self subclassResponsibility ! !!Carga methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 11:20' prior: 33573603!initialize  ^self subclassResponsibility ! !!Carga methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 11:20' prior: 33573717!asString 	^self subclassResponsibility ! !!Carga methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 11:20' prior: 33574849!initialize 	"lo hizo diferente" ^self subclassResponsibility ! !!Carga methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 11:21' prior: 33574980!asString	"lo hizo diferente ^'contenido', asString"	^self subclassResponsibility ! !!Carga methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 11:26'!<= unaCarga	^ self peso <= unaCarga peso.! !!Carga methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 11:27' prior: 33575422!<= unaCarga"PERMITE HACE UNA COMPARACION en la misma clase, y comparar el peso de las cargas"	^ self peso <= unaCarga peso.! !!Carga methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 11:28' prior: 33575109!initialize 	"lo hizo diferente en el ejercio de figuras no agg el ^" ^self subclassResponsibility ! !!Caja methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 11:40' prior: 33572057!initialize 	super initialize."no entendi pa que sirve xd"	peso := 0.! !!Camion methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 12:03'!estado	^estado.! !!Camion methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 12:04'!estado: anObject	estado := anObject ! !!Camion methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 12:05'!patente	^patente! !!Camion methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 12:06'!patente: anObject	patente := anObject! !!Camion methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 12:08' prior: 33576416!patente: anObject patente := anObject 	! !!Camion methodsFor: 'initialization' stamp: 'EmilioGalimberti 4/28/2022 12:12'!initialize 	super initialize	! !!Camion methodsFor: 'initialization' stamp: 'EmilioGalimberti 4/28/2022 12:13' prior: 33576674!initialize 	super initialize.	patente := ''.	estado := 'disponible'.	cargaMaxima := 1000.	cargas := OrderedCollection new. "estaria cargando la collecion vacia"! !!Camion methodsFor: 'initialization' stamp: 'EmilioGalimberti 4/28/2022 12:19' prior: 33576805!initialize 	super initialize.	patente := ''.	estado := 'disponible'.	cargaMaxima := 1000.	cargas := OrderedCollection new. "nos permite que la coleccion se carge de forma ordenada no PONER NIL"! !!Camion methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 12:20'!cargaMaxima	^ cargaMaxima! !!Camion methodsFor: 'accessing' stamp: 'EmilioGalimberti 4/28/2022 12:20'!cargaMaxima: anObject	cargaMaxima := anObject! !!Camion methodsFor: 'control' stamp: 'EmilioGalimberti 4/28/2022 12:29'!subirCarga: unaCarga	! !!Camion methodsFor: 'control' stamp: 'EmilioGalimberti 4/28/2022 12:34'!peso	|valor|	valor := 0.	cargas do:[:x| valor := valor + x peso].	^valor  ! !!Camion methodsFor: 'control' stamp: 'EmilioGalimberti 4/28/2022 12:36' prior: 33577676!peso	|total|	total := 0.	cargas do:[:x| total := total + x peso].	^total  ! !!Camion methodsFor: 'control' stamp: 'EmilioGalimberti 4/28/2022 12:44' prior: 33577577!subirCarga: unaCarga	(self peso + unaCarga peso <= cargaMaxima)		ifTrue: [  ]! !!Camion methodsFor: 'control' stamp: 'EmilioGalimberti 4/28/2022 12:47' prior: 33578018!subirCarga: unaCarga	(unaCarga isKindOf: Carga) 		ifTrue: [ (self peso + unaCarga peso <= cargaMaxima)						ifTrue: [ cargas add: unaCarga  ].	].! !!Camion methodsFor: 'control' stamp: 'EmilioGalimberti 4/28/2022 12:48' prior: 33578190!subirCarga: unaCarga	(unaCarga isKindOf: Carga) ifTrue: [ 		(self peso + unaCarga peso <= cargaMaxima)ifTrue: [ cargas add: unaCarga  	]	].! !!Camion methodsFor: 'control' stamp: 'EmilioGalimberti 4/28/2022 12:48' prior: 33578432!subirCarga: unaCarga	(unaCarga isKindOf: Carga) ifTrue: [ 		(self peso + unaCarga peso <= cargaMaxima)ifTrue: [ 			cargas add: unaCarga ]	].! !!Camion methodsFor: 'control' stamp: 'EmilioGalimberti 4/28/2022 12:53' prior: 33578667!subirCarga: unaCarga	(unaCarga isKindOf: Carga) ifTrue: [ 		(self peso + unaCarga peso <= cargaMaxima)ifTrue: [ 			cargas add: unaCarga  	]	].! !!Camion methodsFor: 'control' stamp: 'EmilioGalimberti 4/28/2022 12:56' prior: 33578904!subirCarga: unaCarga	(unaCarga isKindOf: Carga) ifTrue: [ 		((estado = 'disponible') & (self peso + unaCarga peso <= cargaMaxima)) ifTrue: [ 			cargas add: unaCarga  	]	].! !!Camion methodsFor: 'control' stamp: 'EmilioGalimberti 4/28/2022 12:57' prior: 33579143!subirCarga: unaCarga	(unaCarga isKindOf: Carga) ifTrue: [ 		((estado = 'disponible') & (self peso + unaCarga peso <= cargaMaxima)) ifTrue: [ 			cargas add: unaCarga  	]	].! !!Camion methodsFor: 'control' stamp: 'EmilioGalimberti 4/28/2022 13:02'!bajarrCarga: unaCarga	|ok|	ok := false.                      "↓ se valida si la carga existe"	(unaCarga isKindOf: Carga) ifTrue: [ 		((estado = 'disponible') & (cargas includes: unaCarga )) ifTrue: [ 			cargas remove: unaCarga  	].	ok := true	].^ok! !!Camion methodsFor: 'control' stamp: 'EmilioGalimberti 4/28/2022 13:03' prior: 33579411!subirCarga: unaCarga	|ok|	ok := false.	(unaCarga isKindOf: Carga) ifTrue: [ 		((estado = 'disponible') & (self peso + unaCarga peso <= cargaMaxima)) ifTrue: [ 			cargas add: unaCarga  	].		ok := true.	].^ok.! !!Camion methodsFor: 'control' stamp: 'EmilioGalimberti 4/28/2022 13:11'!cargasEnOrden	|cad|	cad := 'Listado de Cargas en Orden de peso: ', String cr.	cargas asSortedCollection.	cargas do:[:x| cad := cad, x asString, String cr.].	^cad	! !!Carga methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 13:29' prior: 33575772!initialize 	"lo hizo diferente en el ejercio de figuras no agg el ^" self subclassResponsibility ! !!Carga methodsFor: 'duda' stamp: 'EmilioGalimberti 4/28/2022 13:30' prior: 33580563!initialize 	"lo hizo diferente en el ejercio de figuras no agg el ^"! !----SNAPSHOT----2022-04-28T20:33:37.345-03:00 Pharo 10.0 - 64bit (stable).image priorSource: 15360!----QUIT----2022-04-28T20:33:42.274-03:00 Pharo 10.0 - 64bit (stable).image priorSource: 26392!