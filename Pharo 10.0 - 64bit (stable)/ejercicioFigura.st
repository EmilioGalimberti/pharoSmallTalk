Object subclass: #Figura	instanceVariableNames: ''	classVariableNames: ''	package: 'ejercicioFigura'!!Figura methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/21/2022 11:50'!area	self subclassResponsibility.! !!Figura methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/21/2022 11:49'!perimetro	self subclassResponsibility "solo dice para decir que figura no lo utiliza, pero si su sublclases"! !Figura subclass: #Circulo	instanceVariableNames: 'radio'	classVariableNames: ''	package: 'ejercicioFigura'!!Circulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 11:58'!radio: unRadio 	"Establece el radio de un circulo"	radio := unRadio.! !!Circulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 12:07'!radio "indica el radio de un ciruclo" ^radio.! !!Circulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/21/2022 12:07'!area	"METODO HEREDADO, metodo que redifnie el area de un figura para que calcule la de un circulo"	|calculo|	calculo  := Float pi * (self radio raisedTo:2). "radio es un mensaje, al hacer self radio, estoy llamando a mi mismo radio"	^calculo ! !!Circulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/21/2022 12:15'!perimetro 	"METODO HERDADO"	"redifine el perimetro de un circulo, en este caso la longitudo de la circuferencia"	|perimetro|	perimetro := 2 * Float pi *  radio. 	^perimetro.! !Object subclass: #Grafico	instanceVariableNames: 'figuras'	classVariableNames: ''	package: 'ejercicioFigura'!!Grafico methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 17:29'!promedio	"retorna el promedio de las superficies de las Figuras"	| prom ac |	ac := 0.	figuras do: [ :unaFigura | "for" ac := ac + unaFigura area ].	prom := figuras size ~= 0		        ifTrue: [ (ac asFloat / figuras size) asFloat ]		        ifFalse: [ 0 ].	^ prom! !!Grafico methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 17:54'!mayorSuperficie"Retorna la superficie de la figura mas grande"	|may|	may := 0	figuras do: [ :unaFigura | (unaFigura area > may) 		ifTrue: [ may := unaFigura area ] ].	^may		! !!Grafico methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 18:03'!generarMayorPerimtero: perimetro"genera una nueva coleccion con los elemento mayores a un perimetro dado"	|gen|	gen := OrderedCollection new.	figuras do: [ :unaFigura | 		(unaFigura perimetro > perimetro ) 		ifTrue: [ gen add: unaFigura  ] 		].	^gen .		! !!Grafico methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 18:00'!cantAreaPerimetro"Retorna la cantidad de las figuras con area mas grande que su perimetro"	|ar per cont|	cont := 0	figuras do: [ :unaFigura | ar:= unaFigura area. per:=unaFigura perimetro].	(ar > per) 		ifTrue: [ cont:= cont+1 ].	^cont.			! !!Grafico methodsFor: 'initialize' stamp: 'EmilioGalimberti 4/22/2022 17:17'!initialize 	"inicializa la instancia de Grafico da valores por defecto a los atributos"	figuras := OrderedCollection new.	! !!Grafico methodsFor: 'control' stamp: 'EmilioGalimberti 4/22/2022 17:22'!addFigura: unaFigura"Asigna unaFigura a la coleccion de figuras"	figuras add: unaFigura.! !!Grafico methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/22/2022 17:20'!figuras: unasFiguras"Asigna unas figuras al grafico"	figuras := unasFiguras.! !!Grafico methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/22/2022 17:18'!figuras"Retorna los alumnos del curso"	^figuras.! !Figura subclass: #Rectangulo	instanceVariableNames: 'ladoMenor ladoMayor'	classVariableNames: ''	package: 'ejercicioFigura'!!Rectangulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 16:41'!area	^ladoMenor * ladoMayor ! !!Rectangulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 16:40'!tipoRectangulo	"determina si es un cuadrado o no"	(ladoMayor = ladoMenor )		ifTrue: [ ^'El rectangulo es un CUADRADO' ]		ifFalse: [ ^'El rectangulo tiene lados diferentes' ].	^'Rectangulo'! !!Rectangulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 16:43'!perimetro	|calculo|	calculo := (2 * ladoMenor) + (2 * ladoMayor) .	^calculo .! !!Rectangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 12:57'!ladoMenor: unLado ladoMenor := unLado . ! !!Rectangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 12:58'!ladoMayor ^ladoMayor.! !!Rectangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 12:57'!ladoMayor: unLado ladoMayor := unLado .! !!Rectangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/21/2022 12:56'!ladoMenor ^ladoMenor.! !Figura subclass: #Triangulo	instanceVariableNames: 'base catetoA catetoB'	classVariableNames: ''	package: 'ejercicioFigura'!!Triangulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 17:10'!area	"METODO HEREDADO, metodo que redifnie el area de un figura para que calcule la de un circulo"	|t calculo|	t  := (catetoA + catetoB - base) * (catetoA - catetoB + base) * (catetoA  negated + catetoB + base ) * (catetoA + catetoB + base). "radio es un mensaje, al hacer self radio, estoy llamando a mi mismo radio"	calculo := 0.25 *(t sqrt).	^calculo.	! !!Triangulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 17:14'!tipoTriangulo"Determina si un triangulo es equilatero, iscoceles, o escaleno"	(base = catetoA and: base =catetoB)		ifTrue: [ ^'Triangulo Equilatero' ]		ifFalse: [ ^'Triangulo Isoceles'].		! !!Triangulo methodsFor: 'calculos' stamp: 'EmilioGalimberti 4/22/2022 17:08'!perimetro 	"redifine el perimetro de un circulo, en este caso la longitudo de la circuferencia"	^base + catetoA + catetoB ! !!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/22/2022 17:06'!catetoB	^catetoB.! !!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/22/2022 17:07'!catetoB: unLado	catetoB := unLado.	"Asignacion"! !!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/22/2022 17:04'!base 	^base.	"ACCESO"		! !!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/22/2022 17:05'!base: unLado	base := unLado.	"Asignacion/modificaicon"! !!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/22/2022 17:06'!catetoA: unLado	catetoA  := unLado.	"Asignacion"! !!Triangulo methodsFor: 'acceso' stamp: 'EmilioGalimberti 4/22/2022 17:06'!catetoA 	^catetoA .! !